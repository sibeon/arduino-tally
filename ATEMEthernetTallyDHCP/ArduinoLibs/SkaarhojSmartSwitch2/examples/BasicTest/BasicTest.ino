/*****************
 *
 *
 *
 *
 *
 * - kasper
 */


#include <Wire.h>
#include <SPI.h>
#include <Adafruit_GFX.h>
#include <MCP23017.h>
#include <SkaarhojPgmspace.h>
#include <SkaarhojSmartSwitch2.h>
SkaarhojSmartSwitch2 board;




static const unsigned char PROGMEM logo16_glcd_bmp[] =
{ 	B11111111, B11111111, 
	B00000000, B00000000, 
	B00111111, B11111110, 
	B01111111, B11111110, 
	B11111000, B00000000, 
	B11111000, B00000000, 
	B11111000, B00000000, 
	B01111111, B11111100, 
	B00111111, B11111110, 
	B00000000, B00011111, 
	B00000000, B00001111, 
	B00000000, B00011111, 
	B01111111, B11111110, 
	B01111111, B11111100, 
	B00000000, B00000000, 
	B11111111, B11111111
};

// width x height = 64,32
static const uint8_t imageVarName[] PROGMEM = {
	B00000000, B00000000, B01111111, B11111111, B11111111, B11111000, B00000000, B00000100, 
	B00000000, B00111110, B00000111, B11111111, B11111111, B11111110, B00000111, B11111110, 
	B00000111, B11111111, B11100000, B01111111, B11111111, B11111111, B11111111, B11100110, 
	B00011111, B11111111, B11111000, B00001110, B10001111, B11111111, B11111111, B11111111, 
	B00111000, B01111111, B11111111, B10000000, B11000000, B01111110, B11111100, B00000011, 
	B00000000, B00000001, B11111111, B11100000, B01100000, B00011000, B00000000, B00000011, 
	B00000000, B00000000, B00111111, B11111001, B00100000, B00010000, B00000000, B00110011, 
	B00000001, B11111111, B11100011, B11110000, B01000000, B00010000, B01111111, B11111111, 
	B00000111, B11111110, B11111100, B00000000, B10000000, B00110111, B11111111, B11111111, 
	B00111001, B10111010, B00010010, B00000000, B00000000, B00101111, B11111111, B10111111, 
	B00000000, B11111111, B00000000, B00000000, B00000000, B01111111, B11000000, B00000111, 
	B00000000, B00000000, B00000000, B00000000, B00000000, B01111111, B11111000, B00000111, 
	B00000000, B00000000, B00000000, B01100000, B00000000, B01100111, B11111111, B00000111, 
	B00000000, B11000000, B00010000, B00100000, B00000000, B00101111, B10010001, B10001111, 
	B00000000, B00000000, B00000000, B00100000, B00000000, B00100011, B11010000, B11001111, 
	B00000000, B00000000, B00000000, B00000000, B00000000, B00010000, B00010000, B00111111, 
	B00000000, B00000000, B00000000, B00000000, B00000000, B00010000, B00000001, B00011111, 
	B00000000, B00000000, B00000000, B00000000, B00000000, B00010000, B00000011, B00001111, 
	B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00001100, B00001111, 
	B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00001111, 
	B00000000, B00000000, B00000000, B00000010, B00000000, B00001000, B00000000, B00000110, 
	B10000000, B00000000, B00000000, B00000000, B00000000, B00001000, B00000000, B00000110, 
	B00100000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000110, 
	B01000000, B00000000, B00000001, B00000000, B00000000, B00000100, B00000000, B00000110, 
	B10000000, B00000000, B00000010, B00000000, B00000000, B00000100, B00000000, B00000110, 
	B00000000, B00000000, B00000010, B00000000, B00000000, B00000101, B00000000, B00000110, 
	B00000000, B00000000, B00000010, B00111110, B00000000, B00001001, B00000000, B00001110, 
	B00000000, B00000000, B00000011, B00110000, B00000000, B00111001, B01000000, B00001110, 
	B00000000, B00000000, B00000000, B10000000, B00000001, B11111011, B01000000, B00001110, 
	B00000000, B00000000, B00000000, B00000000, B00000001, B10000110, B00100000, B00011110, 
	B00000000, B00000000, B00000000, B00000000, B00111111, B00000000, B00100000, B00111110, 
	B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00100000, B00111110,
};


void setup() {
  Serial.begin(115200);

  Wire.begin();

  board.begin(3);  // SETUP: Board address

  // Setting full brightness (range 0-7) of all buttons:
  board.setButtonBrightness(7, B11111111);
  board.setButtonBrightness(7, B11111111);

  // Setting white color for all buttons:
  board.setButtonColor(3, 3, 3, B11111111);

  // Init done
  board.clearDisplay();   // clears the screen and buffer
  board.display(B11111111);  // Write to all

  board.setRotation(0);

  // text display tests
  board.setTextSize(1);
  board.setTextColor(WHITE);
  board.setCursor(0, 0);
  board.println("Hello, world!");
  board.setTextColor(BLACK, WHITE); // 'inverted' text
  board.println(3.141592);
  board.setTextSize(2);
  board.setTextColor(WHITE);
  board.print("0x"); board.println(0xDEADBEEF, HEX);
  board.display(B11111111);
  delay(2000);


  // miniature bitmap display
  board.clearDisplay();
  board.drawBitmap(30, 16,  logo16_glcd_bmp, 16, 16, 1);
  board.display(B11111111);


  delay(5000);


  // miniature bitmap display
  board.clearDisplay();
  board.drawBitmap(0, 0,  imageVarName, 64, 32, 1);
  board.display(B11111111);

  delay(5000);

}
unsigned long lastTime[8];

void loop() {
  board.testProgramme(B1111);
}





